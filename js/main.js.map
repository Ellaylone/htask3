{"version":3,"sources":["main.js","draw.js","input.js","subs.js"],"names":["showPlayer","linksEl","classList","add","playerEl","remove","initCanvas","canvas","document","querySelector","canvasStartState","addEventListener","e","clickedX","pageX","target","offsetLeft","clickedY","pageY","offsetTop","controlElements","some","el","right","left","top","bottom","type","isSubtitleShown","stopSubTimeout","video","pause","stopDrawLoop","drawCenterPlayButton","canvasControlsColor","audio","createStartElement","startSubTimeout","play","createPauseElement","width","height","offsetWidth","offsetHeight","getContext","drawBackground","canvasBgColor","grayAndGrain","imageData","pixels","data","value","i","length","Math","random","r","g","b","v","color","ctx","fillStyle","fillRect","triangle","points","x","y","push","beginPath","moveTo","lineTo","fill","drawSkratches","strokeOpacity","strokeStyle","amountOfSkratches","floor","skratch","startPoint","endPoint","stroke","startDrawLoop","loopId","subtitles","subtitleIndex","subTimeout","setTimeout","hideSub","timeLength","setInterval","drawLoop","fps","clearInterval","undefined","clearRect","drawImage","getImageData","imageDataFiltered","putImageData","_onInputChange","reader","FileReader","contains","readAsDataURL","files","createVideo","result","readAsText","parseSrt","createAudio","checkInputs","preventDefault","inputs","querySelectorAll","validation","forEach","input","src","createElement","defaultMuted","videoWidth","videoHeight","appendChild","time","currentTime","toFixed","endTime","showSub","autoplay","text","timeConst","sec","min","hr","temp","split","map","res","subtitle","number","parseInt","startTime","startTimeSec","join","startTimeMin","startTimeHr","endTimeSec","endTimeMin","endTimeHr","splice","content","sub","drawSub","font","canvasFontSize","textHeight","canvasLineHeight","topPadding","fillText","clearTimeout","canvasFontColor","linksForm","submitEl","srt"],"mappings":"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","file":"main.js","sourcesContent":["// main\nconst canvasBgColor = '#000',\n      canvasControlsColor = '#fff',\n      canvasFontColor = '#fff',\n      canvasFontSize = 24,\n      canvasLineHeight = 12;\n\nconst linksForm = document.querySelector('.links-form'),\n      linksEl = document.querySelector('.links'),\n      playerEl = document.querySelector('.player'),\n      submitEl = document.querySelector('.links-form__submit');\n\nconst fps = 1000 / 60;\n\nlet video, canvas, audio;\ncanvas = document.querySelector('.player__canvas');\n\nlet controlElements = [],\n    reader = new FileReader(),\n    srt;\n\nlet videoWidth = 700,\n    videoHeight = 400;\n\nlet isSubtitleShown = false,\n    subtitles,\n    subTimeout,\n    subtitleIndex = 0;\n\nlet ctx = canvas.getContext('2d');\nlet loopId;\n\n\nfunction showPlayer () {\n    linksEl.classList.add('hidden');\n    playerEl.classList.remove('hidden');\n}\n\nfunction initCanvas () {\n    canvas = document.querySelector('.player__canvas');\n    canvasStartState();\n\n    canvas.addEventListener('click', (e) => {\n        let clickedX = e.pageX - e.target.offsetLeft;\n        let clickedY = e.pageY - e.target.offsetTop;\n        controlElements.some((el) => {\n            if (clickedX < el.right && clickedX > el.left && clickedY > el.top && clickedY < el.bottom) {\n                if(el.type == 'pause'){\n                    if(!isSubtitleShown){\n                        video.pause();\n                        stopDrawLoop();\n                        drawCenterPlayButton(canvasControlsColor);\n                    } else {\n                        stopSubTimeout();\n                    }\n                    audio.pause();\n                    controlElements = [];\n                    createStartElement();\n                } else {\n                    if(!isSubtitleShown) {\n                        video.play();\n                    } else {\n                        startSubTimeout();\n                    }\n                    audio.play();\n                    createPauseElement();   \n                }\n            }\n        });\n    }, false);\n}\n\nfunction createStartElement () {\n    controlElements = [{\n        type: 'start',\n        top: 0,\n        left: 0,\n        right: canvas.width,\n        bottom: canvas.height\n    }];\n}\n\nfunction createPauseElement () {\n    controlElements = [{\n        type: 'pause',\n        top: 0,\n        left: 0,\n        right: canvas.width,\n        bottom: canvas.height\n    }];\n}\n\nfunction canvasStartState () {\n    video.width = canvas.width = video.offsetWidth;\n    video.height = canvas.height = video.offsetHeight;\n    let ctx = canvas.getContext('2d');\n    drawBackground(canvasBgColor);\n    drawCenterPlayButton(canvasControlsColor);\n}\n","// делаем картинку черно белой и накладываем шум\nfunction grayAndGrain (imageData) {\n    // получаем одномерный массив, описывающий все пиксели изображения\n    let pixels = imageData.data;\n    let value;\n\n    // циклически преобразуем массив, изменяя значения красного, зеленого и синего каналов\n    for (let i = 0; i < pixels.length; i += 4) {\n        value = Math.random() + 1;\n        let r = pixels[i];\n        let g = pixels[i+1];\n        let b = pixels[i+2];\n        // CIE luminance for the RGB\n        // The human eye is bad at seeing red and blue, so we de-emphasize them.\n        let v = 0.2126*r + 0.7152*g + 0.0722*b;\n\n        pixels[i] = pixels[i+1] = pixels[i+2] = v * value;\n    }\n\n    return imageData;\n};\n\nfunction drawBackground (color) {\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n}\n\nfunction drawCenterPlayButton (color) {\n    ctx.fillStyle = `${color}`;\n    let triangle = {\n        width: 35,\n        height: 50\n    };\n\n    // координаты вершин отцентрированного треугольника\n    triangle.points = {\n        top: {\n            x: (canvas.width - triangle.width) / 2,\n            y: (canvas.height - triangle.height) / 2\n        },\n        bottom: {\n            x: (canvas.width - triangle.width) / 2,\n            y: (canvas.height + triangle.height) / 2\n        },\n        right: {\n            x: (canvas.width + triangle.width) / 2,\n            y: canvas.height / 2\n        },\n    };\n\n    controlElements.push({\n        type: 'start',\n        top: triangle.points.top.y,\n        left: triangle.points.top.x,\n        bottom: triangle.points.bottom.y,\n        right: triangle.points.right.x\n    });\n\n    ctx.beginPath();\n    ctx.moveTo(triangle.points.top.x, triangle.points.top.y);\n    ctx.lineTo(triangle.points.bottom.x, triangle.points.bottom.y);\n    ctx.lineTo(triangle.points.right.x, triangle.points.right.y);\n    ctx.fill();\n}\n\nfunction drawSkratches () {\n    let strokeOpacity = Math.random() * (0.8 - 0.2);\n    // белого цвета с рандомной прозрачностью\n    ctx.strokeStyle = `rgba(255, 255, 255, ${strokeOpacity})`;\n\n    // рисуем царапины только если выпадает 99/100\n    let amountOfSkratches = Math.floor(Math.random() * (100 - 0 + 1));\n    amountOfSkratches -= 98;\n    if(amountOfSkratches > 0){\n        for(let i = 0; i < amountOfSkratches; i++){\n            skratch();\n        }\n    }\n}\n\nfunction skratch () {\n    ctx.beginPath();\n    let startPoint = {\n        x: Math.floor(Math.random() * (canvas.width - 1)),\n        y: Math.floor(Math.random() * (canvas.height - 1))\n    };\n\n    let endPoint = {\n        x: startPoint.x,\n        y: Math.floor(Math.random() * (canvas.height - startPoint.y))\n    };\n\n    ctx.moveTo(startPoint.x, startPoint.y);\n    ctx.lineTo(endPoint.x, endPoint.y);\n    ctx.stroke();\n}\n\nfunction startDrawLoop () {\n    if(!loopId && !isSubtitleShown){\n        loopId = setInterval(drawLoop, fps);\n    } else if (typeof subtitles[subtitleIndex] !== 'undefined') {\n        subTimeout = setTimeout(hideSub, subtitles[subtitleIndex].timeLength / 2);\n    }\n}\n\nfunction stopDrawLoop () {\n    if(loopId) {\n        clearInterval(loopId);\n        loopId = undefined;\n    }\n}\n\nfunction drawLoop () {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.drawImage(video, 0, 0, video.width, video.height);\n    \n    let imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    let imageDataFiltered = grayAndGrain(imageData);\n    ctx.putImageData(imageDataFiltered, 0, 0);\n\n    drawSkratches();\n}\n","linksForm.addEventListener('change', _onInputChange, false);\nsubmitEl.addEventListener('click', checkInputs, false);\n\nfunction _onInputChange (e) {\n    var reader = new FileReader();\n\n    switch (true) {\n    case e.target.classList.contains('links-form__video'):\n        reader.readAsDataURL(e.target.files[0]);\n        reader.addEventListener('load', (e) => {\n            createVideo(reader.result);\n        });\n        break;\n    case e.target.classList.contains('links-form__sub'):\n        reader.readAsText(e.target.files[0]);\n        reader.addEventListener('load', (e) => {\n            subtitles = parseSrt(reader.result);\n        });\n        break;\n    case e.target.classList.contains('links-form__audio'):\n        reader.readAsDataURL(e.target.files[0]);\n        reader.addEventListener('load', (e) => {\n            createAudio(reader.result);\n        });\n        break;\n    default:\n        break;\n    }\n}\n\nfunction checkInputs (e) {\n    e.preventDefault();\n    let inputs = document.querySelectorAll('.links-form__input');\n    let validation = true;\n\n    inputs.forEach((input) => {\n        if(input.value === ''){\n            validation = false;\n        }\n    });\n\n    if(validation) {\n        showPlayer();\n        initCanvas();\n    }\n}\n\nfunction createVideo (src) {\n    video = document.createElement('video');\n    video.src = src;\n    video.defaultMuted = true;\n    video.classList.add('player__video');\n    video.width = videoWidth;\n    video.height = videoHeight;\n    \n    document.querySelector('.hidden-elements').appendChild(video);\n\n    video.addEventListener('play', startDrawLoop, false);\n\n    video.addEventListener('pause', stopDrawLoop, false);\n\n    video.addEventListener('timeupdate', (e) => {\n        let time = (e.target.currentTime * 1000).toFixed();\n        if (typeof subtitles[subtitleIndex] !== 'undefined' && time >= subtitles[subtitleIndex].endTime) {\n            if (!isSubtitleShown) {\n                showSub(subtitles[subtitleIndex]);\n                startSubTimeout();\n            }\n        }\n    });\n\n    video.addEventListener('ended', (e) => {\n        audio.pause();\n        stopDrawLoop();\n    }, false);\n}\n\nfunction createAudio (src) {\n    audio = document.createElement('audio');\n\taudio.src = src;\n\taudio.autoplay = false;\n    audio.classList.add('player__audio');\n\n    document.querySelector('.hidden-elements').appendChild(audio);\n}\n","function parseSrt (text) {\n    let timeConst = {\n        sec: 1000,\n        min: 60,\n        hr: 60\n    };\n    let temp = text.split('\\n\\n');\n\n    let result = temp.map((el) => {\n\n        let res = {};\n        let subtitle = el.split('\\n');\n\n        // === Get subtitle's number ===\n        res.number = parseInt(subtitle[0]);\n\n        let time = subtitle[1].split(' --> ');\n\n        // === Convert start time to MS ===\n        let startTime = time[0].split(':');\n        let startTimeSec = parseInt(startTime[2].split(',').join(''));\n        let startTimeMin = parseInt(startTime[1]) * timeConst.min * timeConst.sec;\n        let startTimeHr = parseInt(startTime[0]) * timeConst.hr * timeConst.min * timeConst.sec;\n        startTime = startTimeSec + startTimeMin\t+ startTimeHr;\n        res.startTime = startTime;\n\n        // === Convert end time to MS ===\n        let endTime = time[1].split(':');\n        let endTimeSec = parseInt(endTime[2].split(',').join(''));\n        let endTimeMin = parseInt(endTime[1]) * timeConst.min * timeConst.sec;\n        let endTimeHr = parseInt(endTime[0]) * timeConst.hr * timeConst.min * timeConst.sec;\n        endTime = endTimeSec + endTimeMin\t+ endTimeHr;\n        res.endTime = endTime;\n\n        res.timeLength = endTime - startTime;\n\n        // === Join subtitle content ===\n        subtitle.splice(0, 2);\n        res.content = subtitle;\n\n        return res;\n    });\n\n    return result;\n}\n\nfunction showSub (sub) {\n    isSubtitleShown = true;\n\n    video.pause();\n    drawSub(sub);\n}\n\nfunction drawSub (sub) {\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = 'white';\n    ctx.font = `${canvasFontSize}px Oranienbaum, serif`;\n\n    let textHeight = (sub.content.length * canvasFontSize) + ((sub.content.length - 1) * canvasLineHeight);\n    let topPadding = (canvas.height - textHeight) / 2;\n\n    sub.content.forEach((el, i) => {\n        let top = topPadding + (canvasFontSize * i) + (canvasLineHeight * i);\n        let left = (canvas.width * 0.1);\n        ctx.fillText(el, left, top);\n    }); \n}\n\nfunction hideSub () {\n    if (isSubtitleShown) {\n        isSubtitleShown = false;\n        subtitleIndex++;\n        video.play();\n    }\n    clearTimeout(subTimeout);\n    subTimeout = undefined;\n    controlElements = [];\n    createPauseElement();\n}\n\nfunction stopSubTimeout () {\n    if(subTimeout) {\n        clearTimeout(subTimeout);\n        subTimeout = undefined;\n    }\n}\n\nfunction startSubTimeout () {\n    subTimeout = setTimeout(hideSub, subtitles[subtitleIndex].timeLength);\n}\n"],"sourceRoot":"/source/"}