"use strict";function grayAndGrain(t){for(var e=t.data,o=void 0,i=0;i<e.length;i+=4){o=Math.random()+1;var n=e[i],a=e[i+1],s=e[i+2],r=.2126*n+.7152*a+.0722*s;e[i]=e[i+1]=e[i+2]=r*o}return t}function drawBackground(t,e){t.fillStyle=e,t.fillRect(0,0,canvas.width,canvas.height)}function drawCenterPlayButton(t,e){t.fillStyle=""+e;var o={width:35,height:50};o.points={top:{x:(canvas.width-o.width)/2,y:(canvas.height-o.height)/2},bottom:{x:(canvas.width-o.width)/2,y:(canvas.height+o.height)/2},right:{x:(canvas.width+o.width)/2,y:canvas.height/2}},controlElements.push({type:"start",top:o.points.top.y,left:o.points.top.x,bottom:o.points.bottom.y,right:o.points.right.x}),t.beginPath(),t.moveTo(o.points.top.x,o.points.top.y),t.lineTo(o.points.bottom.x,o.points.bottom.y),t.lineTo(o.points.right.x,o.points.right.y),t.fill()}function drawControls(t,e){t.fillStyle=""+e;t.fillRect(80,canvas.height-controlTopPoint,controlRectWidth,controlRectHeight),t.fillRect(110,canvas.height-controlTopPoint,controlRectWidth,controlRectHeight)}function drawSkratches(){var t=Math.random()*(.8-.2);ctx.strokeStyle="rgba(255, 255, 255, "+t+")";var e=Math.floor(101*Math.random());if(e-=98,e>0)for(var o=0;o<e;o++)skratch()}function skratch(){ctx.beginPath();var t={x:Math.floor(Math.random()*(canvas.width-1)),y:Math.floor(Math.random()*(canvas.height-1))},e={x:t.x,y:Math.floor(Math.random()*(canvas.height-t.y))};ctx.moveTo(t.x,t.y),ctx.lineTo(e.x,e.y),ctx.stroke()}function startDrawLoop(){loopId||isSubtitleShown?"undefined"!=typeof subtitles[subtitleIndex]&&(subTimeout=setTimeout(hideSub,subtitles[subtitleIndex].timeLength/2)):loopId=setInterval(drawLoop,fps)}function stopDrawLoop(){loopId&&(clearInterval(loopId),loopId=void 0)}function drawLoop(){ctx.clearRect(0,0,canvas.width,canvas.height),ctx.drawImage(video,0,0,video.width,video.height);var t=ctx.getImageData(0,0,canvas.width,canvas.height),e=grayAndGrain(t);ctx.putImageData(e,0,0),drawSkratches()}function _onInputChange(t){var e=new FileReader;switch(!0){case t.target.classList.contains("links-form__video"):e.readAsDataURL(t.target.files[0]),e.addEventListener("load",function(t){createVideo(e.result)});break;case t.target.classList.contains("links-form__sub"):e.readAsText(t.target.files[0]),e.addEventListener("load",function(t){subtitles=parseSrt(e.result)});break;case t.target.classList.contains("links-form__audio"):e.readAsDataURL(t.target.files[0]),e.addEventListener("load",function(t){createAudio(e.result)})}checkInputs()}function checkInputs(){var t=document.querySelectorAll(".links-form__input"),e=!0;t.forEach(function(t){""===t.value&&(e=!1)}),e&&(showPlayer(),initCanvas())}function createVideo(t){video=document.createElement("video"),video.src=t,video.defaultMuted=!0,video.classList.add("player__video"),video.width=700,video.height=400,document.querySelector(".hidden-elements").appendChild(video),video.addEventListener("play",startDrawLoop,!1),video.addEventListener("pause",stopDrawLoop,!1),video.addEventListener("timeupdate",function(t){var e=(1e3*t.target.currentTime).toFixed();"undefined"!=typeof subtitles[subtitleIndex]&&e>=subtitles[subtitleIndex].endTime&&(isSubtitleShown||showSub(subtitles[subtitleIndex]))}),video.addEventListener("ended",function(t){audio.stop(),stopDrawLoop()},!1)}function createAudio(t){audio=document.createElement("audio"),audio.src=t,audio.autoplay=!1,audio.classList.add("player__audio"),document.querySelector(".hidden-elements").appendChild(audio)}function showPlayer(){linksEl.classList.add("hidden"),playerEl.classList.remove("hidden")}function initCanvas(){canvas=document.querySelector(".player__canvas"),canvasStartState(),canvas.addEventListener("click",function(t){var e=t.pageX-t.target.offsetLeft,o=t.pageY-t.target.offsetTop;controlElements.some(function(t){e<t.right&&e>t.left&&o>t.top&&o<t.bottom&&("pause"==t.type?(isSubtitleShown?(stopSubTimeout(),audio.pause()):(video.pause(),audio.pause(),stopDrawLoop()),controlElements=[],createStartElement()):isSubtitleShown?(startSubTimeout(),audio.play()):(video.play(),audio.play(),createPauseElement()))})},!1)}function createStartElement(){controlElements=[{type:"start",top:0,left:0,right:canvas.width,bottom:canvas.width-20}]}function createPauseElement(){controlElements=[{type:"pause",top:0,left:0,right:canvas.width,bottom:canvas.width-20}]}function canvasStartState(){video.width=canvas.width=video.offsetWidth,video.height=canvas.height=video.offsetHeight;var t=canvas.getContext("2d");drawBackground(t,"black"),drawCenterPlayButton(t,"white")}function parseSrt(t){var e={sec:1e3,min:60,hr:60},o=t.split("\n\n"),i=o.map(function(t){var o={},i=t.split("\n");o.number=parseInt(i[0]);var n=i[1].split(" --> "),a=n[0].split(":"),s=parseInt(a[2].split(",").join("")),r=parseInt(a[1])*e.min*e.sec,c=parseInt(a[0])*e.hr*e.min*e.sec;a=s+r+c,o.startTime=a;var d=n[1].split(":"),l=parseInt(d[2].split(",").join("")),u=parseInt(d[1])*e.min*e.sec,h=parseInt(d[0])*e.hr*e.min*e.sec;return d=l+u+h,o.endTime=d,o.timeLength=d-a,i.splice(0,2),o.content=i,o});return i}function showSub(t){isSubtitleShown=!0,video.pause(),drawSub(t)}function drawSub(t){ctx.fillStyle="black",ctx.fillRect(0,0,canvas.width,canvas.height),ctx.fillStyle="white",ctx.font="1.5em Oranienbaum, serif";var e=24*t.content.length+12*(t.content.length-1),o=(canvas.height-e)/2;t.content.forEach(function(t,e){var i=o+24*e+12*e,n=.1*canvas.width;ctx.fillText(t,n,i)})}function hideSub(){isSubtitleShown&&(isSubtitleShown=!1,subtitleIndex++,video.play()),clearTimeout(subTimeout),subTimeout=void 0,controlElements=[],createPauseElement()}function stopSubTimeout(){subTimeout&&(clearTimeout(subTimeout),subTimeout=void 0)}function startSubTimeout(){subTimeout=setTimeout(hideSub,subtitles[subtitleIndex].timeLength)}var canvas=document.querySelector(".player__canvas"),ctx=canvas.getContext("2d"),controlBottomPoint=10,controlTopPoint=60,controlTrianglePoint=35,controlRectHeight=50,controlRectWidth=20,fps=1e3/60,loopId=void 0,linksForm=document.querySelector(".links-form"),linksEl=document.querySelector(".links"),playerEl=document.querySelector(".player"),isSubtitleShown=!1,subtitles=void 0,subTimeout=void 0;linksForm.addEventListener("change",_onInputChange,!1);var video=void 0,canvas=void 0,audio=void 0,controlBottomPoint=10,controlTopPoint=60,controlTrianglePoint=35,controlRectHeight=50,controlRectWidth=20,fps=1e3/60,videoWidth=void 0,videoHeight=void 0,videoSizeRatio=void 0,controlElements=[],reader=new FileReader,srt=void 0,subtitleIndex=0;
//# sourceMappingURL=data:application/json;base64,
